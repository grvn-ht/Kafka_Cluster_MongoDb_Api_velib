version: '3'

services:

  zookeeper:
    container_name: zookeeper
    image: zookeeper:latest
    restart: on-failure
    volumes:
      - "./zookeeper/data:/data"
      - "./zookeeper/logs:/datalog"
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    restart: on-failure
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CREATE_TOPICS: "velib-stations:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mongodb:
    container_name: mongodb
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=velib
    volumes:
      - ./mongo-volume:/data/db
    ports:
      - '27017-27019:27017-27019'

  producer:
    container_name: producer
    image: producer:latest    
    restart: on-failure
    depends_on: 
      - kafka

  consumer:
    container_name: consumer
    image: consumer:latest    
    restart: on-failure
    depends_on: 
      - kafka
      - mongodb
